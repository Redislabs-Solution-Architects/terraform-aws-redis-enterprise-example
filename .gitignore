
# python venv
**/venv/*

# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log

# Ignore any .tfvars files that are generated automatically for each Terraform run. Most
# .tfvars files are managed as part of configuration and so should be included in
# version control.
#
# example.tfvars

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
#
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*
terraform.tfvars
terraform.lock.hcl

# databases config
re_databases.json

# ignore dynamically created inventory files
*.ini
terraform.txt
.terraform.lock.hcl

# ignore dynamic files to avoid confusion
modules/nodes-config-re/ansible/playbooks/playbook_re_node.yaml
modules/re-cluster/group_vars/all/main.yaml
modules/re-databases/extra_vars/databases.yaml
modules/re-cluster/extra_vars/*-cluster_inventory.yaml
modules/prometheus-node/ansible/roles/grafana-datasource/defaults/main.yml
modules/prometheus-node/ansible/playbooks/playbook_grafana_dashboard.yaml
